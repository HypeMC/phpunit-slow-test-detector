<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.15.0@5c774aca4746caf3d239d9c8cadb9f882ca29352">
  <file src="src/Extension.php">
    <UnusedClass>
      <code>Extension</code>
    </UnusedClass>
  </file>
  <file src="src/Formatter/DefaultDurationFormatter.php">
    <InvalidOperand>
      <code><![CDATA[$duration->seconds() * 1000 + $duration->nanoseconds() / 1000000]]></code>
      <code>$durationInMilliseconds - $hoursInMilliseconds</code>
      <code>$durationInMilliseconds - $hoursInMilliseconds</code>
      <code>$durationInMilliseconds / 60</code>
      <code>$durationInMilliseconds / 60</code>
      <code>($durationInMilliseconds - $hoursInMilliseconds - $minutesInMilliseconds) / 1000</code>
    </InvalidOperand>
  </file>
  <file src="src/Subscriber/TestPassedSubscriber.php">
    <InternalClass>
      <code>Metadata\Annotation\Parser\Registry::getInstance()</code>
    </InternalClass>
    <InternalMethod>
      <code>Metadata\Annotation\Parser\Registry::getInstance()</code>
      <code>forMethod</code>
      <code>symbolAnnotations</code>
    </InternalMethod>
    <MixedArgument>
      <code>$maximumDuration</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$maximumDuration</code>
    </MixedAssignment>
  </file>
  <file src="test/Double/Collector/AppendingCollector.php">
    <UnusedClass>
      <code>AppendingCollector</code>
    </UnusedClass>
  </file>
  <file src="test/Double/Reporter/CountingReporter.php">
    <UnusedClass>
      <code>CountingReporter</code>
    </UnusedClass>
  </file>
  <file src="test/Double/Reporter/NullReporter.php">
    <UnusedClass>
      <code>NullReporter</code>
    </UnusedClass>
  </file>
  <file src="test/EndToEnd/Default/SleeperTest.php">
    <PossiblyUnusedMethod>
      <code>provideMillisecondsGreaterThanDefaultMaximumDuration</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/EndToEnd/MaximumCount/Five/SleeperTest.php">
    <PossiblyUnusedMethod>
      <code>provideMillisecondsGreaterThanDefaultMaximumDuration</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/EndToEnd/NoOutput/SleeperTest.php">
    <PossiblyUnusedMethod>
      <code>provideMillisecondsGreaterThanDefaultMaximumDuration</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Fixture/Sleeper.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->milliseconds * 1000]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="test/Phar/SleeperTest.php">
    <PossiblyUnusedMethod>
      <code>provideMillisecondsGreaterThanDefaultMaximumDuration</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/DurationTest.php">
    <PossiblyUnusedMethod>
      <code>provideMillisecondsSecondsAndNanoseconds</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/Formatter/DefaultDurationFormatterTest.php">
    <PossiblyUnusedMethod>
      <code>provideDurationAndFormattedDuration</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/Unit/SlowTestTest.php">
    <InternalClass>
      <code><![CDATA[Duration::fromMilliseconds($faker->numberBetween(0))]]></code>
      <code><![CDATA[Duration::fromMilliseconds($faker->numberBetween(0))]]></code>
      <code>SlowTest::create(
            $testIdentifier,
            $duration,
            $maximumDuration,
        )</code>
      <code><![CDATA[TestIdentifier::fromString($faker->word())]]></code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[Duration::fromMilliseconds($faker->numberBetween(0))]]></code>
      <code><![CDATA[Duration::fromMilliseconds($faker->numberBetween(0))]]></code>
      <code>SlowTest::create(
            $testIdentifier,
            $duration,
            $maximumDuration,
        )</code>
      <code><![CDATA[TestIdentifier::fromString($faker->word())]]></code>
      <code>duration</code>
      <code>maximumDuration</code>
      <code>testIdentifier</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/TestIdentifierTest.php">
    <InternalClass>
      <code>TestIdentifier::fromString($value)</code>
      <code>TestIdentifier::fromString($value)</code>
    </InternalClass>
    <InternalMethod>
      <code>TestIdentifier::fromString($value)</code>
      <code>TestIdentifier::fromString($value)</code>
      <code>tostring</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/TimeKeeperTest.php">
    <InternalClass>
      <code><![CDATA[TestIdentifier::fromString($faker->word())]]></code>
      <code><![CDATA[TestIdentifier::fromString($faker->word())]]></code>
      <code><![CDATA[Time::fromSecondsAndNanoseconds(
            $faker->numberBetween($startedTime->seconds() + 1),
            $faker->numberBetween($startedTime->nanoseconds() + 1, 999_999_999),
        )]]></code>
      <code><![CDATA[Time::fromSecondsAndNanoseconds(
            $faker->numberBetween(0),
            $faker->numberBetween(0, 999_999_999 - 1),
        )]]></code>
      <code><![CDATA[Time::fromSecondsAndNanoseconds(
            $faker->numberBetween(0),
            $faker->numberBetween(0, 999_999_999),
        )]]></code>
      <code>new TimeKeeper()</code>
      <code>new TimeKeeper()</code>
    </InternalClass>
    <InternalMethod>
      <code><![CDATA[TestIdentifier::fromString($faker->word())]]></code>
      <code><![CDATA[TestIdentifier::fromString($faker->word())]]></code>
      <code><![CDATA[Time::fromSecondsAndNanoseconds(
            $faker->numberBetween($startedTime->seconds() + 1),
            $faker->numberBetween($startedTime->nanoseconds() + 1, 999_999_999),
        )]]></code>
      <code><![CDATA[Time::fromSecondsAndNanoseconds(
            $faker->numberBetween(0),
            $faker->numberBetween(0, 999_999_999 - 1),
        )]]></code>
      <code><![CDATA[Time::fromSecondsAndNanoseconds(
            $faker->numberBetween(0),
            $faker->numberBetween(0, 999_999_999),
        )]]></code>
      <code>duration</code>
      <code>nanoseconds</code>
      <code>nanoseconds</code>
      <code>seconds</code>
      <code>seconds</code>
      <code>start</code>
      <code>stop</code>
      <code>stop</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/TimeTest.php">
    <PossiblyUnusedMethod>
      <code>provideStartEndAndDuration</code>
      <code>provideStartGreaterThanEnd</code>
    </PossiblyUnusedMethod>
  </file>
</files>
